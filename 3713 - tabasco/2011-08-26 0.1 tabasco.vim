" File: tabasco.vim
" Author: Adam Szlachta
" Version: 0.1
" Last Modified: 26/8/2011

function! s:getFilePath(fileId)
    if has('unix') || has('macunix')
        let fpath = $HOME . '/.'
    else
        let fpath = $VIM . '/_'
        if has('win32')
            if $USERPROFILE != ''
                let fpath = $USERPROFILE . '/_'
            endif
        endif
    endif
    return fpath . 'vim_tabasco.' . a:fileId
endfunction

let s:escFileNameChars = ' *?[{`$%#"|!<>();&' . "'\t\n"
function! s:escFileName(fname)
    return escape(a:fname, s:escFileNameChars)
endfunction

function! s:getFileName(fileId)
    if a:fileId != ''
	return s:getFilePath(a:fileId)
    endif
    return s:getFilePath('default')
endfunction

function! s:tabsLoad(fileId)
    exe 'autocmd VimLeave * exe "Tabssave ' . a:fileId . '"'
    let fileName = s:getFileName(a:fileId)
    if filereadable(fileName)
        let tabsFileList = readfile(fileName)
        if tabsFileList[0] =~# '^#' && len(tabsFileList) > 1
            if tabpagenr('$') > 1
                exe 'tabo'
            endif
            call remove(tabsFileList, 0)
            let escFname = s:escFileName(tabsFileList[0])
	    if len(escFname) > 0
                exe 'edit ' . escFname
	    endif
            let i = 1
            while i < len(tabsFileList)
                let escFname = s:escFileName(tabsFileList[i])	
                if len(escFname) > 0
                    exe '999tabnew ' . escFname
                endif
                let i += 1
            endwhile    
        endif
    endif
endfunction

function! s:tabsSave(fileId)
    let fileName = s:getFileName(a:fileId)	
    let bufferNames = [ '# List of saved tabs. File generated by tabasco.vim plugin.' ]
    " all buffers in tabs are saved as separated tabs for simplicity
    for i in range(tabpagenr('$'))
        for tabbuf in tabpagebuflist(i + 1)
	    call add(bufferNames, bufname(tabbuf))
	endfor
    endfor
    if !filereadable(fileName) || filewritable(fileName)
        call writefile(bufferNames, fileName)
    else
	echo "Error savind into " . fileName
    endif
endfunction


command! -nargs=? Tabsload call s:tabsLoad(<q-args>)
command! -nargs=? Tabssave call s:tabsSave(<q-args>)
