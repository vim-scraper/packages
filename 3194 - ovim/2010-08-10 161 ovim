#!/bin/zsh -f

# $Id: ovim 161 2010-08-10 03:31:09Z juhas $

# extendedglob is necessary for fancy matching
emulate zsh
setopt extendedglob

DOC="
${0:t} -- open files or execute commands in remote gvim
usage: ${0:t} [options] [+cmd] file1 file2 ...

Options:
  -c            execute ex commands in the remote gvim, for example
                ${0:t} -c split foo.txt
  -s SERVER     select GVIM server, by default the last one used
  -h, --help    display this message and exit
"
# remove leading and trailing blanks
DOC=${${DOC##[[:space:]]##}%%[[:space:]]##}

# Defaults
GVIM==gvim
[[ -d ~/tmp ]] && TMPDIR=~/tmp || TMPDIR=/tmp
VIMSCRIPT=${TMPDIR}/.ovi-$USERNAME

# parse options -h/--help, -s, -c
zmodload zsh/zutil
zparseopts -D h=opt_help -help=opt_help s:=opt_server c=opt_cmd

if [[ -n $opt_help ]]; then
    print $DOC
    exit
fi

# Determine the server

# as a default use the last server used, but only when alive
liveservers=( ${(f)"$($GVIM --serverlist)"} )
if [[ -r $VIMSCRIPT ]]; then
    lines=( ${(f)"$(<$VIMSCRIPT)"} )
    [[ $lines[1] == (#b)[[:blank:]\"]##SERVER=(*)(#B) ]] && SERVER=${match[1]}
    SERVER=${(M)liveservers:#$SERVER}
fi

# override from the command line option
if [[ -n $opt_server ]]; then
    SERVER=${(U)opt_server[-1]}
# when still not set, use the last server alive or GVIM when none
elif [[ -z $SERVER ]]; then
    SERVER=${liveservers[-1]:-GVIM}
fi

SCRIPT='
" SERVER=$SERVER
cd ${(q)PWD}
try
    $COMMAND
finally
    if getcwd() == ${(qqq)PWD}
	cd -
    endif
endtry
call remote_foreground(${(qq)SERVER})
'

script_exmode()
{
    local qargs idx COMMAND
    qargs=( ${argv} )
    for idx in {1..$#}; do
        if [[ -e ${argv[idx]} ]]; then
            qargs[idx]=${(q)argv[idx]}
        fi
    done
    COMMAND="${qargs}"
    print -r -- ${(e)SCRIPT}
}

script_argsmode()
{
    local cmd qargs idx COMMAND
    idx=${argv[(I)+*]}
    if [[ $idx != 0 ]]; then
        cmd=${argv[idx]}
        argv[$idx]=( )
    fi
    case $# in
        (0)  COMMAND=: ;;
        (1)  COMMAND=edit ;;
        (*)  COMMAND=args ;;
    esac
    qargs=( ${(q)argv} )
    COMMAND="$COMMAND $cmd $qargs"
    print -r -- ${(e)SCRIPT}
}

# execute in subshell with secure umask
(
umask 077
/bin/rm -f $VIMSCRIPT
if [[ -n ${opt_cmd} ]]; then
    script_exmode $* > $VIMSCRIPT
else
    script_argsmode $* > $VIMSCRIPT
fi
)

# execute in SERVER, but first check if it is alive
if [[ -n ${(M)liveservers:#$SERVER} ]]; then
    $GVIM --servername $SERVER \
        --remote-send "<C-\><C-N>:source $VIMSCRIPT<CR>"
else
    $GVIM --servername $SERVER -S $VIMSCRIPT
fi
